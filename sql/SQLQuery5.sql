SET ANSI_NULLS ONGOSET QUOTED_IDENTIFIER ONGOIF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[department_info]') AND type in (N'U'))BEGINCREATE TABLE [dbo].[department_info](	[dno] [nchar](2) NOT NULL,	[dname] [varchar](20) NULL,	[manager] [nchar](3) NULL, CONSTRAINT [PK_department_info] PRIMARY KEY CLUSTERED (	[dno] ASC)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]) ON [PRIMARY]ENDGOSET ANSI_NULLS ONGOSET QUOTED_IDENTIFIER ONGOIF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[worker_info]') AND type in (N'U'))BEGINCREATE TABLE [dbo].[worker_info](	[wno] [nchar](3) NOT NULL,	[wname] [varchar](12) NULL,	[dno] [nchar](2) NOT NULL,	[sex] [varchar](4) NULL,	[post] [varchar](10) NOT NULL,	[state] [varchar](10) NOT NULL,	[bankcode] [nchar](19) NULL,	[pwd] [nchar](6) NULL, CONSTRAINT [PK_worker_info] PRIMARY KEY CLUSTERED (	[wno] ASC)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]) ON [PRIMARY]ENDGOSET ANSI_NULLS ONGOSET QUOTED_IDENTIFIER ONGOIF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[checking_in]') AND type in (N'U'))BEGINCREATE TABLE [dbo].[checking_in](	[wno] [nchar](3) NOT NULL,	[checking] [int] NULL,	[month] [int] NULL, CONSTRAINT [PK_checking_in_1] PRIMARY KEY CLUSTERED (	[wno] ASC)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]) ON [PRIMARY]ENDGOSET ANSI_NULLS ONGOSET QUOTED_IDENTIFIER ONGOIF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[salary]') AND type in (N'U'))BEGINCREATE TABLE [dbo].[salary](	[wno] [nchar](3) NOT NULL,	[basic] [float] NULL,	[post] [float] NULL,	[allowance] [float] NULL,	[insurance] [float] NULL,	[checking] [float] NULL,	[tax] [float] NULL, CONSTRAINT [PK_salary] PRIMARY KEY CLUSTERED (	[wno] ASC)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]) ON [PRIMARY]ENDGOSET ANSI_NULLS ONGOSET QUOTED_IDENTIFIER ONGOIF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[View_1]'))EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[View_1]ASSELECT     dbo.worker_info.wnameFROM         dbo.checking_in INNER JOIN                      dbo.salary ON dbo.checking_in.wno = dbo.salary.wno INNER JOIN                      dbo.worker_info ON dbo.checking_in.wno = dbo.worker_info.wno INNER JOIN                      dbo.department_info ON dbo.worker_info.dno = dbo.department_info.dno' GOIF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'View_1', NULL,NULL))EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]Begin DesignProperties =    Begin PaneConfigurations =       Begin PaneConfiguration = 0         NumPanes = 4         Configuration = "(H (1[71] 4[6] 2[5] 3) )"      End      Begin PaneConfiguration = 1         NumPanes = 3         Configuration = "(H (1 [50] 4 [25] 3))"      End      Begin PaneConfiguration = 2         NumPanes = 3         Configuration = "(H (1 [50] 2 [25] 3))"      End      Begin PaneConfiguration = 3         NumPanes = 3         Configuration = "(H (4 [30] 2 [40] 3))"      End      Begin PaneConfiguration = 4         NumPanes = 2         Configuration = "(H (1 [56] 3))"      End      Begin PaneConfiguration = 5         NumPanes = 2         Configuration = "(H (2 [66] 3))"      End      Begin PaneConfiguration = 6         NumPanes = 2         Configuration = "(H (4 [50] 3))"      End      Begin PaneConfiguration = 7         NumPanes = 1         Configuration = "(V (3))"      End      Begin PaneConfiguration = 8         NumPanes = 3         Configuration = "(H (1[56] 4[18] 2) )"      End      Begin PaneConfiguration = 9         NumPanes = 2         Configuration = "(H (1 [75] 4))"      End      Begin PaneConfiguration = 10         NumPanes = 2         Configuration = "(H (1[66] 2) )"      End      Begin PaneConfiguration = 11         NumPanes = 2         Configuration = "(H (4 [60] 2))"      End      Begin PaneConfiguration = 12         NumPanes = 1         Configuration = "(H (1) )"      End      Begin PaneConfiguration = 13         NumPanes = 1         Configuration = "(V (4))"      End      Begin PaneConfiguration = 14         NumPanes = 1         Configuration = "(V (2))"      End      ActivePaneConfig = 0   End   Begin DiagramPane =       Begin Origin =          Top = 0         Left = 0      End      Begin Tables =          Begin Table = "checking_in"            Begin Extent =                Top = 15               Left = 523               Bottom = 155               Right = 736            End            DisplayFlags = 280            TopColumn = 0         End         Begin Table = "department_info"            Begin Extent =                Top = 14               Left = 11               Bottom = 144               Right = 150            End            DisplayFlags = 280            TopColumn = 0         End         Begin Table = "worker_info"            Begin Extent =                Top = 166               Left = 212               Bottom = 375               Right = 434            End            DisplayFlags = 280            TopColumn = 0         End         Begin Table = "salary"            Begin Extent =                Top = 266               Left = 655               Bottom = 385               Right = 794            End            DisplayFlags = 280            TopColumn = 0         End      End   End   Begin SQLPane =    End   Begin DataPane =       Begin ParameterDefaults = ""      End   End   Begin CriteriaPane =       Begin ColumnWidths = 11         Column = 1440         Alias = 900         Table = 1170         Output = 720         Append = 1400         NewValue = 1170         SortType = 1350         SortOrder = 1410         GroupBy = 1350         Filter = 1350         Or = 1350         Or = 1350         Or = 1350      End   EndEnd' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'View_1'GOIF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'View_1', NULL,NULL))EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'View_1'GOIF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_worker_info_post]') AND parent_object_id = OBJECT_ID(N'[dbo].[worker_info]'))ALTER TABLE [dbo].[worker_info]  WITH CHECK ADD  CONSTRAINT [CK_worker_info_post] CHECK  (([post]='员工' OR [post]='经理'))GOALTER TABLE [dbo].[worker_info] CHECK CONSTRAINT [CK_worker_info_post]GOIF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_worker_sex]') AND parent_object_id = OBJECT_ID(N'[dbo].[worker_info]'))ALTER TABLE [dbo].[worker_info]  WITH CHECK ADD  CONSTRAINT [CK_worker_sex] CHECK  (([sex]='男' OR [sex]='女'))GOALTER TABLE [dbo].[worker_info] CHECK CONSTRAINT [CK_worker_sex]GOIF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_worker_state]') AND parent_object_id = OBJECT_ID(N'[dbo].[worker_info]'))ALTER TABLE [dbo].[worker_info]  WITH CHECK ADD  CONSTRAINT [CK_worker_state] CHECK  (([state]='在职' OR [state]='休假'))GOALTER TABLE [dbo].[worker_info] CHECK CONSTRAINT [CK_worker_state]GOIF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_checking_in]') AND parent_object_id = OBJECT_ID(N'[dbo].[checking_in]'))ALTER TABLE [dbo].[checking_in]  WITH CHECK ADD  CONSTRAINT [CK_checking_in] CHECK  (([checking]>(-1)))GOALTER TABLE [dbo].[checking_in] CHECK CONSTRAINT [CK_checking_in]GOIF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_salary_wno]') AND parent_object_id = OBJECT_ID(N'[dbo].[salary]'))ALTER TABLE [dbo].[salary]  WITH CHECK ADD  CONSTRAINT [FK_salary_wno] FOREIGN KEY([wno])REFERENCES [dbo].[worker_info] ([wno])GOALTER TABLE [dbo].[salary] CHECK CONSTRAINT [FK_salary_wno]GOIF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_salary_allowance]') AND parent_object_id = OBJECT_ID(N'[dbo].[salary]'))ALTER TABLE [dbo].[salary]  WITH CHECK ADD  CONSTRAINT [CK_salary_allowance] CHECK  (([allowance]>(0)))GOALTER TABLE [dbo].[salary] CHECK CONSTRAINT [CK_salary_allowance]GOIF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_salary_basic]') AND parent_object_id = OBJECT_ID(N'[dbo].[salary]'))ALTER TABLE [dbo].[salary]  WITH CHECK ADD  CONSTRAINT [CK_salary_basic] CHECK  (([basic]>(0.0)))GOALTER TABLE [dbo].[salary] CHECK CONSTRAINT [CK_salary_basic]GOIF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_salary_checking]') AND parent_object_id = OBJECT_ID(N'[dbo].[salary]'))ALTER TABLE [dbo].[salary]  WITH CHECK ADD  CONSTRAINT [CK_salary_checking] CHECK  (([checking]>(0) AND [checking]<(32)))GOALTER TABLE [dbo].[salary] CHECK CONSTRAINT [CK_salary_checking]GOIF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_salary_insure]') AND parent_object_id = OBJECT_ID(N'[dbo].[salary]'))ALTER TABLE [dbo].[salary]  WITH CHECK ADD  CONSTRAINT [CK_salary_insure] CHECK  (([insurance]>(0)))GOALTER TABLE [dbo].[salary] CHECK CONSTRAINT [CK_salary_insure]GOIF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_salary_post]') AND parent_object_id = OBJECT_ID(N'[dbo].[salary]'))ALTER TABLE [dbo].[salary]  WITH CHECK ADD  CONSTRAINT [CK_salary_post] CHECK  (([post]>(0)))GOALTER TABLE [dbo].[salary] CHECK CONSTRAINT [CK_salary_post]